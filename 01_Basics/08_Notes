JavaScript Date Object Explained
================================

1. Current Date Object:
-----------------------
let myDate = new Date();
console.log(myDate);
// Output: Full Date object with current date and time

console.log(myDate.toString());
// Output: Human-readable format ‚Üí e.g., "Tue May 07 2025 10:23:45 GMT+0530"

console.log(myDate.toDateString());
// Output: Only date portion ‚Üí e.g., "Tue May 07 2025"

console.log(myDate.toLocaleString());
// Output: Date and time formatted as per local system settings

console.log(myDate.getDay());
// Output: Day of week as a number (0 = Sunday, 6 = Saturday)

console.log(typeof myDate);
// Output: "object"
// ‚úÖ Date is a complex object, not a primitive.

2. Creating Specific Date:
--------------------------
let myCreatedDate = new Date("2024-02-14");
console.log(myCreatedDate.toLocaleString());
// Output: "14/2/2024, 5:30:00 AM" (format may vary by system locale)
// ‚úÖ You can pass dates as string or individual components
// Useful for storing birthdays, deadlines, or scheduled events

3. Working with Timestamps:
---------------------------
let myTime = Date.now();
// Output: Number of milliseconds since Jan 1, 1970 (Unix Epoch)

console.log(myTime.toLocaleString()); 
// ‚ùå This throws error ‚Äì `myTime` is a number. You must convert to Date first:
// Correct way: new Date(myTime).toLocaleString()

console.log(myCreatedDate.getTime());
// Output: Timestamp (milliseconds) for the given date

console.log(Math.floor(Date.now()/1000));
// ‚úÖ Converts milliseconds to seconds
// Useful when working with APIs or time comparisons

4. Getting Day Name:
---------------------
myDate.toLocaleString('default', {
    weekday:"long"
});
// Output: "Tuesday" (for example)
// ‚úÖ Use this to get full weekday name like "Monday", "Tuesday", etc.
// Great for displaying friendly calendar formats

====================================
üìù Summary:

| Method                          | Purpose                                    |
|----------------------------------|--------------------------------------------|
| new Date()                      | Gets current date/time                     |
| .toString()                     | Converts date to readable string           |
| .toDateString()                 | Gets only the date portion                 |
| .toLocaleString()               | Localized date and time                    |
| .getDay()                       | Returns day of week as number              |
| new Date("YYYY-MM-DD")          | Create custom date                         |
| Date.now()                      | Gets current time in milliseconds          |
| .getTime()                      | Gets milliseconds for a date               |
| .toLocaleString({ weekday })    | Gets weekday name                          |

‚úÖ Date handling is essential in apps involving:
- Reminders
- Scheduling
- Time tracking
- Logging and analytics
"""